using Microsoft.AspNetCore.Mvc;
using TrivyOperator.Dashboard.Application.Models;
using TrivyOperator.Dashboard.Application.Services.Abstractions;

namespace TrivyOperator.Dashboard.Application.Controllers;

[ApiController]
[Route("api/vulnerability-reports")]
public class VulnerabilityReportsController(
    IVulnerabilityReportService vulnerabilityReportService,
    ILogger<VulnerabilityReportsController> logger) : ControllerBase
{
    [HttpGet(Name = "getAll")]
    [ProducesResponseType<IEnumerable<VulnerabilityDto>>(StatusCodes.Status200OK)]
    [ProducesResponseType<ProblemDetails>(StatusCodes.Status400BadRequest)]
    [ProducesResponseType<ProblemDetails>(StatusCodes.Status500InternalServerError)]
    public async Task<IEnumerable<VulnerabilityDto>> GetAll()
    {
        return await vulnerabilityReportService.GetTrivyVulnerabilities();
    }

    [HttpGet("{namespaceName}", Name = "getByNamespaceName")]
    [ProducesResponseType<IEnumerable<VulnerabilityDto>>(StatusCodes.Status200OK)]
    [ProducesResponseType<ProblemDetails>(StatusCodes.Status400BadRequest)]
    [ProducesResponseType<ProblemDetails>(StatusCodes.Status500InternalServerError)]
    public async Task<IEnumerable<VulnerabilityDto>> GetByNamespaceName([FromRoute] string namespaceName)
    {
        return await vulnerabilityReportService.GetTrivyVulnerabilities(namespaceName);
    }
}
