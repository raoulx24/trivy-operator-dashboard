using Microsoft.AspNetCore.Mvc;
using TrivyOperator.Dashboard.Application.Models;
using TrivyOperator.Dashboard.Application.Services.Abstractions;
using TrivyOperator.Dashboard.Domain;
using TrivyOperator.Dashboard.Domain.Services.Abstractions;

namespace TrivyOperator.Dashboard.Application.Controllers;

[ApiController]
[Route("[controller]")]
public class VulnerabilityReportController(
    IVulnerabilityReportService vulnerabilityReportService,
    ILogger<WeatherForecastController> logger) : ControllerBase
{
    [HttpGet("GetAll", Name = "getall")]
    [ProducesResponseType<Task<IEnumerable<VulnerabilityDto>>>(StatusCodes.Status200OK)]
    [ProducesResponseType<ProblemDetails>(StatusCodes.Status400BadRequest)]
    [ProducesResponseType<ProblemDetails>(StatusCodes.Status500InternalServerError)]
    public async Task<IEnumerable<VulnerabilityDto>> GetAll()
    {
        return await vulnerabilityReportService.GetTrivyVulnerabilities();
    }

    [HttpGet("GetByNamespaceName", Name = "getbynamespacename")]
    [ProducesResponseType<Task<IEnumerable<VulnerabilityDto>>>(StatusCodes.Status200OK)]
    [ProducesResponseType<ProblemDetails>(StatusCodes.Status400BadRequest)]
    [ProducesResponseType<ProblemDetails>(StatusCodes.Status500InternalServerError)]
    public async Task<IEnumerable<VulnerabilityDto>> GetByNamespaceName(string namespaceName)
    {
        return await vulnerabilityReportService.GetTrivyVulnerabilities(namespaceName);
    }
}
