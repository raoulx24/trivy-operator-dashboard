namespace TrivyOperator.Dashboard.Application.Services
{
    using TrivyOperator.Dashboard.Application.Models;
    using TrivyOperator.Dashboard.Application.Services.Abstractions;
    using TrivyOperator.Dashboard.Domain.Services.Abstractions;
    using TrivyOperator.Dashboard.Domain.Trivy.VulnerabilityReport;

    public class VulnerabilityReportService : IVulnerabilityReportService
    {

        private IVulnerabilityReportDomainService vulnerabilityReportDomainService { get; set; }

        public VulnerabilityReportService(IVulnerabilityReportDomainService vulnerabilityReportDomainService)
        {
            this.vulnerabilityReportDomainService = vulnerabilityReportDomainService;
        }


        public async Task<List<VulnerabilityDto>> GetTrivyVulnerabilities()
        {
            return await GetTrivyVulnerabilityDtos(await vulnerabilityReportDomainService.GetTrivyVulnerabilities());
        }

        public async Task<List<VulnerabilityDto>> GetTrivyVulnerabilities(string namespaceName)
        {
            return await GetTrivyVulnerabilityDtos(await vulnerabilityReportDomainService.GetTrivyVulnerabilities(namespaceName));
        }

        private async Task<List<VulnerabilityDto>> GetTrivyVulnerabilityDtos(List<VulnerabilityReportCR> vulnerabilityReportCRs)
        {
            List<VulnerabilityDto> dtos = new();

            foreach (VulnerabilityReportCR vulnerabilityReportCR in vulnerabilityReportCRs)
            {
                dtos.AddRange(vulnerabilityReportCR.ToVulnerabilityDtos());
            }

            return dtos;
        }
    }
}
