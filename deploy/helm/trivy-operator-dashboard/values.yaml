# app related params
logging:
  level: Information                                      # Debug, Information, Warning, Error

kubernetes:
  kubeConfigFileName: ""                                  # path to custom kube config file. in k8s it should be empty
  namespaceList: ""                                       # a list of namespaces, comma delimited
  trivyUseClusterRbacAssessmentReport: true               # (in)activate Cluster RBAC Assessment Reports
  trivyUseConfigAuditReport: true                         # (in)activate Config Audit Reports
  trivyUseExposedSecretReport: true                       # (in)activate Exposed Secret Reports
  trivyUseVulnerabilityReport: true                       # (in)activate Vulnerability Reports
  trivyUseClusterComplianceReport: true                   # (in)activate Cluster Compliance Reports
  trivyUseClusterVulnerabilityReport: true                # (in)activate Cluster Vulnerability Reports
  trivyUseRbacAssessmentReport: true                      # (in)activate RBAC Assessment Reports
  trivyUseSbomReport: true                                # (in)activate SBOM Reports
  trivyUseClusterSbomReport: true                         # (in)activate Cluster SBOM Reports

gitHub:
  serverCheckForUpdates: true
  checkForUpdatesIntervalInMinutes: 360

openTelemetry:
  enabled: false
  otelEndpoint: 
  otelProtocol: grpc
  consoleEnabled: false
  aspNetCoreInstrumentationEnabled: true
  runtimeInstrumentationEnabled: true
  prometheusExporterPort:  # 8901

# if needed extra environment values can be provided here
extraEnvValues: []
# - name: ENV1
#   value: "value1"

# other params
replicaCount: 1

image:
  repository: ghcr.io/raoulx24/trivy-operator-dashboard
  pullPolicy: Always
  tag: "1.7.0"

imagePullSecrets: []

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

clusterRbac:
  create: true

podAnnotations: {}
podLabels:
  app.kubernetes.io/component: web
  app.kubernetes.io/part-of: trivy-operator

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8900

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: true
  className: "nginx"
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # advised values
  # requests:
  #   cpu: 100m
  #   memory: 384Mi
  # limits:
  #   cpu: 1000m
  #   memory: 384Mi

livenessProbe:
  httpGet:
    path: /healthz/live
    port: http
  initialDelaySeconds: 30
  periodSeconds: 30
readinessProbe:
  httpGet:
    path: /healthz/ready
    port: http
  initialDelaySeconds: 30
  periodSeconds: 30

nodeSelector: {}

tolerations: []

affinity: {}
