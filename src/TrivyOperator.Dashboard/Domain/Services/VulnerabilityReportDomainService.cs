using k8s;
using TrivyOperator.Dashboard.Domain.Services.Abstractions;
using TrivyOperator.Dashboard.Domain.Trivy.CustomResources.Abstractions;
using TrivyOperator.Dashboard.Domain.Trivy.VulnerabilityReport;
using TrivyOperator.Dashboard.Infrastructure.Abstractions;

namespace TrivyOperator.Dashboard.Domain.Services;

public class VulnerabilityReportDomainService(
    IKubernetesClientFactory kubernetesClientFactory,
    IKubernetesNamespaceDomainService kubernetesNamespaceDomainService) : IVulnerabilityReportDomainService
{
    private readonly Kubernetes kubernetesClient = kubernetesClientFactory.GetClient();

    public async Task<IList<VulnerabilityReportCR>> GetTrivyVulnerabilities()
    {
        List<string> namespaceNames = await kubernetesNamespaceDomainService.GetKubernetesNamespaces();
        List<VulnerabilityReportCR> vulnerabilities = [];
        foreach (string namespaceName in namespaceNames)
        {
            vulnerabilities.AddRange(await GetTrivyVulnerabilities(namespaceName));
        }

        return vulnerabilities;
    }

    public async Task<IList<VulnerabilityReportCR>> GetTrivyVulnerabilities(string namespaceName)
    {
        VulnerabilityReportCRD myCrd = new();
        CustomResourceList<VulnerabilityReportCR> vulnerabilityReportCrList =
            await kubernetesClient.CustomObjects.ListNamespacedCustomObjectAsync<CustomResourceList<VulnerabilityReportCR>>(
                myCrd.Group,
                myCrd.Version,
                namespaceName,
                myCrd.PluralName);
        return vulnerabilityReportCrList.Items ?? [];
    }
}
