using TrivyOperator.Dashboard.Domain.Trivy.VulnerabilityReport;

namespace TrivyOperator.Dashboard.Application.Models;

public class VulnerabilityDto
{
    public string? Namespace { get; set; }

    public string? PodName { get; set; }

    public string? ContainerName { get; set; }

    public string? ResourceKind { get; set; }

    public string? Registry { get; set; }

    public string? ImageName { get; set; }

    public string? ImageTag { get; set; }

    public string? VulnerabilityId { get; set; }

    public string? Resource { get; set; }

    public string? Severity { get; set; }

    public double Score { get; set; }

    public Uri? PrimaryLink { get; set; }

    public string? InstalledVersion { get; set; }

    public string? FixedVersion { get; set; }

    public string? Title { get; set; }

    public DateTimeOffset? PublishedDate { get; set; }
}

public static class VulnerabilityReportCrExtensions
{
    public static List<VulnerabilityDto> ToVulnerabilityDtos(this VulnerabilityReportCr vulnerabilityReportCr)
    {
        List<VulnerabilityDto> vulnerabilityDtos = new();

        foreach (Vulnerability vulnerability in vulnerabilityReportCr.Report.Vulnerabilities)
        {
            VulnerabilityDto vulnerabilityDto = new()
            {
                Namespace = vulnerabilityReportCr.Metadata.NamespaceProperty,
                PodName =
                    vulnerabilityReportCr.Metadata.Labels.ContainsKey("trivy-operator.resource.name")
                        ? vulnerabilityReportCr.Metadata.Labels["trivy-operator.resource.name"]
                        : string.Empty,
                ContainerName =
                    vulnerabilityReportCr.Metadata.Labels.ContainsKey("trivy-operator.container.name")
                        ? vulnerabilityReportCr.Metadata.Labels["trivy-operator.container.name"]
                        : string.Empty,
                ResourceKind =
                    vulnerabilityReportCr.Metadata.Labels.ContainsKey("trivy-operator.resource.kind")
                        ? vulnerabilityReportCr.Metadata.Labels["trivy-operator.resource.kind"]
                        : string.Empty,
                Registry = vulnerabilityReportCr.Report?.Registry?.Server,
                ImageName = vulnerabilityReportCr.Report?.Artifact?.Repository,
                ImageTag = vulnerabilityReportCr.Report?.Artifact?.Tag,
                VulnerabilityId = vulnerability.VulnerabilityId,
                Resource = vulnerability.Resource,
                Severity = vulnerability.Severity,
                Score = vulnerability.Score,
                PrimaryLink = vulnerability.PrimaryLink,
                InstalledVersion = vulnerability.InstalledVersion,
                FixedVersion = vulnerability.FixedVersion,
                Title = vulnerability.Title,
            };

            vulnerabilityDtos.Add(vulnerabilityDto);
        }

        return vulnerabilityDtos;
    }
}
