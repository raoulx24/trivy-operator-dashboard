using k8s;
using k8s.Autorest;
using k8s.Models;
using TrivyOperator.Dashboard.Application.Services.BackgroundQueues.Abstractions;
using TrivyOperator.Dashboard.Application.Services.KubernetesWatchers.Abstractions;
using TrivyOperator.Dashboard.Application.Services.WatcherEvents.Abstractions;
using TrivyOperator.Dashboard.Domain.Trivy.CustomResources.Abstractions;
using TrivyOperator.Dashboard.Domain.Trivy.VulnerabilityReport;
using TrivyOperator.Dashboard.Infrastructure.Abstractions;
using TrivyOperator.Dashboard.Utils;

namespace TrivyOperator.Dashboard.Application.Services.KubernetesWatchers;

public class VulnerabilityReportWatcher : KubernetesNamespacedWatcher<CustomResourceList<VulnerabilityReportCR>, VulnerabilityReportCR, IBackgroundQueue<VulnerabilityReportCR>, KubernetesWatcherEvent<VulnerabilityReportCR>>,
    IKubernetesNamespacedWatcher<VulnerabilityReportCR>
{
    public VulnerabilityReportWatcher(IKubernetesClientFactory kubernetesClientFactory,
        IBackgroundQueue<VulnerabilityReportCR> backgroundQueue,
        ILogger<VulnerabilityReportWatcher> logger) :
        base(kubernetesClientFactory, backgroundQueue, logger)
    {
    }

    protected override async Task<HttpOperationResponse<CustomResourceList<VulnerabilityReportCR>>> GetKubernetesObjectWatchList(IKubernetesObject<V1ObjectMeta>? sourceKubernetsObject, CancellationToken cancellationToken)
    {
        VulnerabilityReportCRD myCrd = new();

        return await kubernetesClient.CustomObjects
                        .ListNamespacedCustomObjectWithHttpMessagesAsync<CustomResourceList<VulnerabilityReportCR>>(
                            myCrd.Group,
                            myCrd.Version,
                            VarUtils.GetCacherRefreshKey(sourceKubernetsObject),
                            myCrd.PluralName,
                            watch: true,
                            timeoutSeconds: int.MaxValue,
                            cancellationToken: cancellationToken);
    }
}
