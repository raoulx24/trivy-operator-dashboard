using k8s;
using k8s.Autorest;
using k8s.Models;
using Polly;
using TrivyOperator.Dashboard.Application.Services.BackgroundQueues.Abstractions;
using TrivyOperator.Dashboard.Application.Services.WatcherEvents.Abstractions;
using TrivyOperator.Dashboard.Application.Services.Watchers.Abstractions;
using TrivyOperator.Dashboard.Domain.Services.Abstractions;
using TrivyOperator.Dashboard.Domain.Trivy.CustomResources.Abstractions;
using TrivyOperator.Dashboard.Domain.Trivy.VulnerabilityReport;
using TrivyOperator.Dashboard.Infrastructure.Abstractions;

namespace TrivyOperator.Dashboard.Application.Services.Watchers;

public class VulnerabilityReportWatcher(
    IKubernetesClientFactory kubernetesClientFactory,
    INamespacedResourceWatchDomainService<VulnerabilityReportCr, CustomResourceList<VulnerabilityReportCr>> namespacedResourceWatchDomainService,
    IBackgroundQueue<VulnerabilityReportCr> backgroundQueue,
    IServiceProvider serviceProvider,
    AsyncPolicy retryPolicy,
    ILogger<VulnerabilityReportWatcher> logger)
    : NamespacedWatcher<CustomResourceList<VulnerabilityReportCr>, VulnerabilityReportCr,
        IBackgroundQueue<VulnerabilityReportCr>, WatcherEvent<VulnerabilityReportCr>>(
        kubernetesClientFactory,
        namespacedResourceWatchDomainService,
        backgroundQueue,
        serviceProvider,
        retryPolicy,
        logger)
{
    //protected override async Task<HttpOperationResponse<CustomResourceList<VulnerabilityReportCr>>>
    //    GetKubernetesObjectWatchList(
    //        IKubernetesObject<V1ObjectMeta>? sourceKubernetesObject,
    //        string? lastResourceVersion,
    //        CancellationToken cancellationToken)
    //{
    //    VulnerabilityReportCrd myCrd = new();

    //    return await KubernetesClient.CustomObjects
    //        .ListNamespacedCustomObjectWithHttpMessagesAsync<CustomResourceList<VulnerabilityReportCr>>(
    //            myCrd.Group,
    //            myCrd.Version,
    //            GetNamespaceFromSourceEvent(sourceKubernetesObject),
    //            myCrd.PluralName,
    //            watch: true,
    //            resourceVersion: lastResourceVersion,
    //            allowWatchBookmarks: true,
    //            timeoutSeconds: GetWatcherRandomTimeout(),
    //            cancellationToken: cancellationToken);
    //}
}
