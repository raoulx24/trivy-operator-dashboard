import { Component } from '@angular/core';

import { ClusterVulnerabilityReportDenormalizedDto } from '../../../api/models/cluster-vulnerability-report-denormalized-dto';
import { ClusterVulnerabilityReportService } from '../../../api/services/cluster-vulnerability-report.service';

import { TrivyTableComponent } from '../../ui-elements/trivy-table/trivy-table.component';
import { TrivyTableColumn } from '../../ui-elements/trivy-table/trivy-table.types';

@Component({
  selector: 'app-cluster-vulnerability-reports-detailed',
  standalone: true,
  imports: [TrivyTableComponent],
  templateUrl: './cluster-vulnerability-reports-detailed.component.html',
  styleUrl: './cluster-vulnerability-reports-detailed.component.scss',
})
export class ClusterVulnerabilityReportsDetailedComponent {
  dataDtos?: ClusterVulnerabilityReportDenormalizedDto[] | null;
  isLoading: boolean = false;

  csvFileName: string = 'Cluster Vulnerability.Reports';

  trivyTableColumns: TrivyTableColumn[] = [];

  constructor(private dataDtoService: ClusterVulnerabilityReportService) {
    this.getTableDataDtos();

    this.trivyTableColumns = [
      {
        field: 'resourceName',
        header: 'Name',
        isFilterable: true,
        isSortable: true,
        multiSelectType: 'none',
        style: 'width: 170px; max-width: 170px;',
        renderType: 'standard',
      },
      {
        field: 'resourceKind',
        header: 'Kind',
        isFilterable: true,
        isSortable: true,
        multiSelectType: 'none',
        style: 'width: 170px; max-width: 170px;',
        renderType: 'standard',
      },
      {
        field: 'resourceContainerName',
        header: 'Container',
        isFilterable: true,
        isSortable: true,
        multiSelectType: 'none',
        style: 'width: 170px; max-width: 170px;',
        renderType: 'standard',
      },
      {
        field: 'imageName',
        header: 'Image',
        isFilterable: true,
        isSortable: true,
        multiSelectType: 'none',
        style: 'width: 210px; max-width: 210px;',
        renderType: 'standard',
      },
      {
        field: 'imageTag',
        header: 'Tag',
        isFilterable: true,
        isSortable: true,
        multiSelectType: 'none',
        style: 'width: 115px; max-width: 115px;',
        renderType: 'standard',
      },
      {
        field: 'imageRepository',
        header: 'Repository',
        isFilterable: true,
        isSortable: true,
        multiSelectType: 'none',
        style: 'width: 220px; max-width: 220px;',
        renderType: 'standard',
      },
      {
        field: 'imageOsFamily',
        header: 'OSFam',
        isFilterable: true,
        isSortable: true,
        multiSelectType: 'none',
        style: 'width: 130px; max-width: 130px;',
        renderType: 'standard',
      },
      {
        field: 'imageOsName',
        header: 'OSName',
        isFilterable: true,
        isSortable: true,
        multiSelectType: 'none',
        style: 'width: 130px; max-width: 130px;',
        renderType: 'standard',
      },
      {
        field: 'imageEosl',
        header: 'EOSL',
        isFilterable: true,
        isSortable: true,
        multiSelectType: 'none',
        style: 'width: 110px; max-width: 110px;',
        renderType: 'eosl',
      },
      {
        field: 'resource',
        header: 'Resource',
        isFilterable: true,
        isSortable: true,
        multiSelectType: 'none',
        style: 'width: 150px; max-width: 150px;',
        renderType: 'standard',
      },
      {
        field: 'title',
        header: 'Title',
        isFilterable: false,
        isSortable: false,
        multiSelectType: 'none',
        style: 'width: 450px; max-width: 450px; white-space: normal;',
        renderType: 'standard',
      },
      {
        field: 'severityId',
        header: 'Sev',
        isFilterable: true,
        isSortable: true,
        multiSelectType: 'severities',
        style: 'width: 125px; max-width: 125px;',
        renderType: 'severityBadge',
      },
      {
        field: 'installedVersion',
        header: 'Installed Ver',
        isFilterable: true,
        isSortable: true,
        multiSelectType: 'none',
        style: 'width: 150px; max-width: 150px;',
        renderType: 'standard',
      },
      {
        field: 'fixedVersion',
        header: 'Fixed Ver',
        isFilterable: true,
        isSortable: true,
        multiSelectType: 'none',
        style: 'width: 150px; max-width: 150px;',
        renderType: 'standard',
      },
      {
        field: 'publishedDate',
        header: 'Publish',
        isFilterable: false,
        isSortable: true,
        multiSelectType: 'none',
        style: 'width: 130px; max-width: 200px;',
        renderType: 'date',
      },
      {
        field: 'lastModifiedDate',
        header: 'Modif',
        isFilterable: false,
        isSortable: true,
        multiSelectType: 'none',
        style: 'width: 130px; max-width: 200px;',
        renderType: 'date',
      },
      {
        field: 'score',
        header: 'Score',
        isFilterable: false,
        isSortable: true,
        multiSelectType: 'none',
        style: 'width: 110px; max-width: 110px;',
        renderType: 'standard',
      },

      {
        field: 'vulnerabilityId',
        header: 'CVE',
        isFilterable: true,
        isSortable: true,
        multiSelectType: 'none',
        style: 'width: 150px; max-width: 150px;',
        renderType: 'link',
        extraFields: ['primaryLink'],
      },
    ];
  }

  public getTableDataDtos() {
    this.isLoading = true;
    this.dataDtoService.getClusterVulnerabilityReportDenormalizedDtos().subscribe({
      next: (res) => this.onGetDataDtos(res),
      error: (err) => console.error(err),
    });
  }

  onGetDataDtos(dtos: ClusterVulnerabilityReportDenormalizedDto[]) {
    this.dataDtos = dtos;
    this.isLoading = false;
  }
}
