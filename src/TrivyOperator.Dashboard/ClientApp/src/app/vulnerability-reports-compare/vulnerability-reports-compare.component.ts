import { Component, effect, input, model, OnInit } from '@angular/core';

import { VulnerabilityReportImageDto } from '../../api/models/vulnerability-report-image-dto';
import { VulnerabilityReportsService } from '../../api/services/vulnerability-reports.service';

import { GenericReportsCompareComponent } from '../generic-reports-compare/generic-reports-compare.component';
import { NamespacedImageDto } from '../namespace-image-selector/namespace-image-selector.types';

import { TrivyTableColumn, TrivyTableOptions } from '../trivy-table/trivy-table.types';
import { vulnerabilityReportDetailColumns } from '../trivy-table-definitions/vulnerability-report-detail-columns';

@Component({
  selector: 'app-vulnerability-reports-compare',
  imports: [ GenericReportsCompareComponent ],
  templateUrl: './vulnerability-reports-compare.component.html',
  styleUrl: './vulnerability-reports-compare.component.scss'
})
export class VulnerabilityReportsCompareComponent implements OnInit {
  dataDtos = model<VulnerabilityReportImageDto[] | undefined>();
  firstSelectedVulnerabilityReportId = input<string | undefined>();
  namespacedImageDtos?: NamespacedImageDto[];

  comparedTableColumns: TrivyTableColumn[] = [
    {
      field: 'first',
      header: '1st',
      isFilterable: false,
      isSortable: true,
      multiSelectType: 'none',
      style: 'width: 90px; max-width: 90px;',
      renderType: 'boolean',
    },
    {
      field: 'second',
      header: '2nd',
      isFilterable: false,
      isSortable: true,
      multiSelectType: 'none',
      style: 'width: 90px; max-width: 90px;',
      renderType: 'boolean',
    },
    ...vulnerabilityReportDetailColumns
    ];
  compareTableOptions: TrivyTableOptions = {
    isClearSelectionVisible: false,
    isExportCsvVisible: false,
    isResetFiltersVisible: true,
    isRefreshVisible: false,
    isRefreshFilterable: false,
    isFooterVisible: false,
    tableSelectionMode: null,
    tableStyle: {},
    stateKey: 'Vulnerability Reports - Compared',
    dataKey: null,
    rowExpansionRender: null,
    extraClasses: 'trivy-with-filters',
  };

  constructor(private service: VulnerabilityReportsService) {
    effect(() => {
      const dataDtos = this.dataDtos();
      if (dataDtos) {
        this.onGetDataDtos(dataDtos);
      }
    });
  }

  ngOnInit() {
    if (!this.dataDtos()) {
      this.service
        .getVulnerabilityReportImageDtos()
        .subscribe({
          next: (res) => this.onGetDataDtos(res),
          error: (err) => console.error(err),
        });
    }
  }

  onGetDataDtos(vulnerabilityReportImageDtos: VulnerabilityReportImageDto[]) {
    this.dataDtos.set(vulnerabilityReportImageDtos);
    this.namespacedImageDtos = vulnerabilityReportImageDtos
      .map(vr => ({
        uid: vr.uid ?? '', resourceNamespace: vr.resourceNamespace ?? '',
        imageName: vr.imageName ?? '', imageTag: vr.imageTag ?? '' }));
  }
}
